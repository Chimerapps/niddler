package com.icapps.niddler.ui.form;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public abstract class ConnectDialog extends JDialog {
	protected JPanel contentPane;
	protected JButton buttonOK;
	protected JButton buttonCancel;
	protected JList adbList;
	protected JTextField directIP;
	protected JFormattedTextField port;

	public ConnectDialog(final JFrame owner) {
		super(owner, "Select a device to connect to", true);
		setContentPane(contentPane);
		getRootPane().setDefaultButton(buttonOK);

		buttonOK.addActionListener(e -> onOK());

		buttonCancel.addActionListener(e -> onCancel());

		// call onCancel() when cross is clicked
		setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				onCancel();
			}
		});

		// call onCancel() on ESCAPE
		contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	}

	protected abstract void onOK();

	protected abstract void onCancel();

	{
		// GUI initializer generated by IntelliJ IDEA GUI Designer
		// >>> IMPORTANT!! <<<
		// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		contentPane = new JPanel();
		contentPane.setLayout(new BorderLayout(0, 0));
		contentPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5), null));
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new BorderLayout(0, 0));
		contentPane.add(panel1, BorderLayout.CENTER);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new BorderLayout(0, 0));
		panel1.add(panel2, BorderLayout.SOUTH);
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new BorderLayout(0, 0));
		panel2.add(panel3, BorderLayout.NORTH);
		directIP = new JTextField();
		directIP.setMinimumSize(new Dimension(70, 24));
		directIP.setPreferredSize(new Dimension(70, 24));
		panel3.add(directIP, BorderLayout.CENTER);
		final JLabel label1 = new JLabel();
		label1.setMinimumSize(new Dimension(70, 16));
		label1.setPreferredSize(new Dimension(70, 16));
		label1.setText("Device ip:");
		panel3.add(label1, BorderLayout.WEST);
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new BorderLayout(0, 0));
		panel2.add(panel4, BorderLayout.SOUTH);
		final JLabel label2 = new JLabel();
		label2.setMinimumSize(new Dimension(70, 16));
		label2.setPreferredSize(new Dimension(70, 16));
		label2.setText("Port:");
		panel4.add(label2, BorderLayout.WEST);
		port = new JFormattedTextField();
		port.setText("6555");
		port.setToolTipText("Default: 6555");
		panel4.add(port, BorderLayout.CENTER);
		final JScrollPane scrollPane1 = new JScrollPane();
		panel1.add(scrollPane1, BorderLayout.CENTER);
		adbList = new JList();
		scrollPane1.setViewportView(adbList);
		final JPanel panel5 = new JPanel();
		panel5.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
		contentPane.add(panel5, BorderLayout.SOUTH);
		buttonOK = new JButton();
		buttonOK.setText("Connect");
		panel5.add(buttonOK);
		buttonCancel = new JButton();
		buttonCancel.setText("Cancel");
		panel5.add(buttonCancel);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return contentPane;
	}
}
